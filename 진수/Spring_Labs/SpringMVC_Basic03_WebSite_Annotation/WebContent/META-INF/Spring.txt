(강사님도 다른곳에서 들고 온 프로젝트 파일들...)
기존 : JSP 기반의 사이트 (DAO  , VO)

고전적인 Spring 기반의 서비스

Spring 사용 LIB :
MAIN

dist\안에 Jar import ....

-----------------------------------------------------------
1. Spring 관련 jar 로드
2. 설정 (Web.xml) => DispatcherServlet 설정
3. DispatcherServlet 사용하는 bean 설정 xml 파일 생성
   (dispatcher-servlet.xml)
4. Mapping 할 Controller 구성
   ->[행위당] Controller 하나씩 생성	 **********
   4.1 : NoticeController(조회 용도 컨트롤러)
   4.2 : NoticeDetailController(상세보기 용도 컨트롤러)
   .........
   
5. 시작점 : customer 폴더안에 notice.htm
-------------------------------------------------------------

1. web.xml => Front Contoller : DispatcherServlet 구현
           => URL 패턴 : *.htm

2. 필요한 객체를 Load => 패턴을 가지고 있는 녀석들
   사용자가 notice.htm
   xml 하나 추가 ->     <servlet-name>dispatcher</servlet-name>
   dispatcher-servlet.xml 생성
   
-------------------------------------------------------------------------------
Spring 도 기존의 MVC 사용 
Model 유지
View 유지
Controller =>  DispatcherServlet => 사용하는 서비스 class 제작

3. Controller 역활을 하는 클래스 제작 
   => NoticeController 클래스 
   단 이 클래스는 implements Controller 구현 하여야 한다
   =>handleRequest 메서드가 모든 처리 담당
   =>글쓰기 -> 클래스
   =>글상세 -> 클래스 
   =>필요한 DAO 클래스도 참조 관계로 가지고 있다

4.  NoticeController 인젝션 처리 통해 DispatcherServlet 사용할 수 있게
    NoticeController 를 빈으로 등록  (페턴 구현)
    사용하는 추가 class 에 대해서 setter 처리 할 수 있도록 ref=설정
    
    주의사항
    <property name="noticeDao" ref="noticeDao"></property>   
     =>name="noticeDao" => private NoticeDao noticeDao;
     =>setter 동작 

5. view 단처리 (JSTL and EL)
   jar 추가
   
6. 기본적인 조회 처리 완료
------------------------------------------------------------
현재 추가적인 구현 : 상세보기  구현
그런데 현재 사용하는 Spring 방식에서는 하나의 기능이(method) 구현 하기 위해서
별도로 하나의 클래스 생성(controller) 상세를 처리하는 ....
->>
그래서 [annotation] 사용하면 지금의 문제를 해결 가능 (하나의 클래스가 여러개의 기능)    

->>
Controller 하나에 기능 여러개 ... 답 ) Annotation 사용   
   
   
=======================================================================================
[SpringMVC_Basic03_WebSite_Annotation] 변경사항

SpringMVC_Basic03_Annotation 에서
>Annotation 기반 으로 변경
>게시판 목록
>게시판 상세보기

@Controller
@RequestMapping

1. 하나의 컨트롤러가 여러개의 요청을 함수 단위로 처리
1.1CustomerController >> 게시판 목록보기, 게시판 상세보기 ... 함수단위로 매핑해서


-----SpringMVC_Basic03_Annotation 에서 [SpringMVC_Basic03_WebSite_Annotation] 로 오면서 controllers.customer 패키지에 있는것들을 모두 ncontroller 패키지에 하나로 합쳤다
아래는 합치는 방법 힌트)

함수의 단위 매핑(URL)

@Controller
class Board{
	
	@RequestMapping("/list.do")
	listBoard(){
	
	}
	
	@RequestMapping("/insert.do")
	insertBoard(Board board){
	
	}
}
   
   
   
   
   
   
   
     