<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" 
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
       xsi:schemaLocation="http://www.springframework.org/schema/beans 
                           http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/context 
                           http://www.springframework.org/schema/context/spring-context.xsd">
<!-- 자동 주입 -->
<!--  
	의존 관계 (생성자 , setter ) 자동 주입
	xml에서 안하고 @Autowired @Resource 에서 처리하겠다
	[전제조건] : context:annotation-config
-->	
<context:annotation-config/>

<!-- 공통 Bean -->
<bean id="internalResourceViewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix">
			<value>/WEB-INF/views/</value>
		</property>
		<property name="suffix">
			<value>.jsp</value>
		</property>
	</bean>

<!-- Test_1 

@Controller
public class HelloController

@Controller 가지고 있는 클래스는 자동으로 IOC 컨테이너에 등록되는 방법은?
	@Component, @Repository, @Service, 
	@Controller, @RestController, 
 	@ControllerAdvice, @Configuration
	를 가지고 있는 클래스를 자동으로 bean 객체로 생성 가능 
-->
<!-- 얘가 있으면 bean 객체를 만들지 않아도 된다  -->
<!-- <context:component-scan base-package="com.controller"></context:component-scan> -->

<bean id="helloController" class="com.controller.HelloController"></bean>


<!-- Test_2 설정 (하나의 요청 주소로 get, post 판단하여 처리)
	화면단 , 처리단 (로그인 화면, 로그인 처리 , 글쓰기 화면, 글쓰기 처리)
	[[[ 전제조건 ]]] : 요청되는 주소가 같다
	 ArticleService == @Autowired == 자동 주입
	 
컨트롤러 / 인젝션 되는 객체 bean으로 만들기 
-->
	<bean class="com.controller.NewArticleController"></bean>
	<bean class="com.service.ArticleService"></bean>

<!-- Test_3 설정 (하나의 요청 주소로 get, post 판단하여 처리): List<> 다룸 

-->
	<bean class="com.controller.OrderController"></bean>
	
<!-- Test_4 설정 : 파라미터 값 받기 -> @RequestParam -->
	<bean class="com.controller.SearchController"></bean>


<!-- TEST_5 Cookie 사용하기 @Cookievalue -->
	<bean class="com.controller.CookieController"></bean>


<!-- TEST_6 
import org.springframework.web.multipart.commons.CommonsMultipartResolver;
CommonsMultipartFile 을 사용하기 위하서는
반드시 CommonsMultipartResolver 빈 객체 IOC 컨테이너 안에 있어야 한다
CommonsMultipartResolver : Upload 파일 정보를 관리 (파일 크기 ....)

의존객체 :org.apache.commons.fileupload

파일 작업 : 
       com.springsource.org.apache.commons.io

-->
<bean class="com.controller.ImageController"></bean>
<!-- id 어떤 이름 하라고 정해짐 : multipartResolver -->
<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
	<property name="maxUploadSize" value="10485760"></property>
</bean>

</beans>