<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"	
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans 
                           http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/context 
                           http://www.springframework.org/schema/context/spring-context.xsd">	
<!-- DB연결 설정 -->
<bean id="driverManagerDataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
 	<property name="driverClassName" value="oracle.jdbc.driver.OracleDriver" />
 	<property name="url" value="jdbc:oracle:thin:@localhost:1521:XE" />
 	<property name="username" value="springuser" />
 	<property name="password" value="1004" />
</bean>		
 
 <!-- Mybatis 설정
기본 자바코드 : SqlMapConfig.xml 에서 설정했던 작업 (DB연결 ,mapper 설정)
파일 없어지고 설명파일안에서   > SqlSessionFactoryBean
기존 java 코드 : builder 사용 > Factory 객체 > sqlsession 생성 > 사용 

두개의 클래스가 위 작업 처리 
SqlSessionFactoryBean
SqlSessionTemplate


여기서는 session이 쓰레드에 안전해야 하고 scope이 method 안이여야 한다 : 장점=> transaction 처리가 수월하다
private SqlSessionFactory factory;
public GuestDAO(){
	factory = SqlSessionFactoryService.getSqlSession();
	}
public void print(){
	session = factory.openSession()
}
 -->
<bean id="sqlSessionFactoryBean"  class="org.mybatis.spring.SqlSessionFactoryBean">
    <property name="dataSource" ref="driverManagerDataSource"></property>
    <property name="mapperLocations" value="classpath*:kr/co/mycom/model/mapper/*xml" />
</bean> 
<!-- 싱글톤 기반 : ibatis처럼 된다 -->
<bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
  <constructor-arg index="0" ref="sqlSessionFactoryBean"/>
</bean>
<!-- Mybatis 설정  -->


</beans>
